.toolbar {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 20px 24px;
  margin: 24px 0;
  background: var(--card);
  border: 1px solid rgba(255, 255, 255, 0.08);
  border-radius: 16px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
  backdrop-filter: blur(20px);
  position: relative;
  overflow: hidden;
}

.toolbar::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 1px;
  background: linear-gradient(90deg, 
    transparent 0%, 
    rgba(110, 168, 254, 0.3) 50%, 
    transparent 100%
  );
}

.filters {
  display: flex;
  gap: 4px;
  background: rgba(255, 255, 255, 0.02);
  border-radius: 12px;
  padding: 4px;
  border: 1px solid rgba(255, 255, 255, 0.05);
}

.filterButton {
  position: relative;
  border: none;
  background: transparent;
  color: var(--muted);
  padding: 10px 16px;
  border-radius: 8px;
  cursor: pointer;
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  font-weight: 500;
  font-size: 0.875rem;
  letter-spacing: 0.025em;
  text-transform: capitalize;
  min-width: 80px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-family: inherit;
  outline: none;
}

.filterButton:hover {
  color: var(--fg);
  background: rgba(255, 255, 255, 0.04);
  transform: translateY(-1px);
}

.filterButton:active {
  transform: translateY(0);
}

.filterButtonActive {
  color: var(--accent);
  background: rgba(110, 168, 254, 0.1);
  box-shadow: 
    0 0 0 1px rgba(110, 168, 254, 0.2),
    0 2px 8px rgba(110, 168, 254, 0.1);
}

.filterButtonActive::before {
  content: '';
  position: absolute;
  inset: 0;
  border-radius: 8px;
  padding: 1px;
  background: linear-gradient(135deg, 
    rgba(110, 168, 254, 0.3) 0%, 
    transparent 50%, 
    rgba(110, 168, 254, 0.3) 100%
  );
  mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  mask-composite: xor;
  -webkit-mask-composite: xor;
}

.filterButtonActive:hover {
  color: var(--accent);
  background: rgba(110, 168, 254, 0.15);
  transform: translateY(-1px);
}

.actions {
  display: flex;
  gap: 12px;
  align-items: center;
}

.newTaskButton {
  display: flex;
  align-items: center;
  gap: 8px;
  background: var(--accent);
  color: #000;
  text-decoration: none;
  padding: 12px 20px;
  border-radius: 10px;
  font-weight: 600;
  font-size: 0.875rem;
  letter-spacing: 0.025em;
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  border: none;
  cursor: pointer;
  position: relative;
  overflow: hidden;
  box-shadow: 0 2px 12px rgba(110, 168, 254, 0.25);
}

.newTaskButton::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, 
    transparent, 
    rgba(255, 255, 255, 0.2), 
    transparent
  );
  transition: left 0.6s ease;
}

.newTaskButton:hover {
  background: #5a96e8;
  transform: translateY(-2px);
  box-shadow: 0 4px 20px rgba(110, 168, 254, 0.35);
}

.newTaskButton:hover::before {
  left: 100%;
}

.newTaskButton:active {
  transform: translateY(-1px);
}

.newTaskIcon {
  font-size: 1rem;
  font-weight: bold;
}

/* Responsive design */
@media (max-width: 640px) {
  .toolbar {
    flex-direction: column;
    gap: 16px;
    padding: 16px 20px;
  }
  
  .filters {
    width: 100%;
    justify-content: center;
  }
  
  .filterButton {
    flex: 1;
    min-width: unset;
    font-size: 0.8rem;
    padding: 8px 12px;
  }
  
  .newTaskButton {
    width: 100%;
    justify-content: center;
  }
}

@media (max-width: 480px) {
  .filters {
    flex-wrap: wrap;
    gap: 2px;
    padding: 2px;
  }
  
  .filterButton {
    font-size: 0.75rem;
    padding: 6px 10px;
  }
}

/* Focus styles for accessibility */
.filterButton:focus-visible {
  outline: 2px solid var(--accent);
  outline-offset: 2px;
}

.newTaskButton:focus-visible {
  outline: 2px solid var(--fg);
  outline-offset: 2px;
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .toolbar {
    border-color: var(--fg);
  }
  
  .filterButtonActive {
    background: var(--accent);
    color: #000;
  }
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  .filterButton,
  .newTaskButton {
    transition: none;
  }
  
  .filterButton:hover,
  .newTaskButton:hover {
    transform: none;
  }
  
  .newTaskButton::before {
    display: none;
  }
}