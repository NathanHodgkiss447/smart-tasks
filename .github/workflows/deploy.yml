name: Deploy Frontend & Backend

on:
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      client: ${{ steps.filter.outputs.client }}
      server: ${{ steps.filter.outputs.server }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            client:
              - 'client/**'
            server:
              - 'server/**'

  frontend:
    if: needs.changes.outputs.client == 'true'
    needs: changes
    runs-on: ubuntu-latest
    environment: production
    concurrency:
      group: vercel-frontend-prod
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: client/package-lock.json

      # Optional local build (good for catching errors early)
      - name: Install deps (client)
        run: npm ci
        working-directory: client
      - name: Build (client)
        run: npm run build
        working-directory: client

      # Deploy via Vercel CLI from repo root.
      # Keep Vercel Project Settings → Root Directory = "client"
      - name: Deploy to Vercel (prebuilt)
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }} # team_… or user_…
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }} # prj_…
        run: |
          npm i -g vercel@latest
          vercel pull --yes --environment=production \
            --token="$VERCEL_TOKEN" \
            --scope="$VERCEL_ORG_ID" \
            --org-id="$VERCEL_ORG_ID" \
            --project-id="$VERCEL_PROJECT_ID"
          vercel build --prod --token="$VERCEL_TOKEN"
          vercel deploy --prebuilt --prod \
            --token="$VERCEL_TOKEN" \
            --scope="$VERCEL_ORG_ID"

  backend:
    if: needs.changes.outputs.server == 'true'
    needs: changes
    runs-on: ubuntu-latest
    environment: production
    concurrency:
      group: render-backend-prod
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4
      - name: Trigger Render deploy
        run: |
          curl -fsS -X POST \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Accept: application/json" \
            https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys
